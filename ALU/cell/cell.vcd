$date
  Tue Jun  2 13:49:05 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module cell_tb $end
$var reg 1 ! a_signal $end
$var reg 1 " b_signal $end
$var reg 1 # cin_signal $end
$var reg 1 $ s_signal $end
$var reg 1 % cout_signal $end
$var reg 3 & sel_signal[2:0] $end
$scope module alu_cell $end
$var reg 1 ' a $end
$var reg 1 ( b $end
$var reg 1 ) cin $end
$var reg 3 * sel[2:0] $end
$var reg 1 + s $end
$var reg 1 , cout $end
$var reg 1 - s1 $end
$var reg 1 . s2 $end
$var reg 1 / s3 $end
$var reg 1 0 s4 $end
$var reg 1 1 s5 $end
$var reg 1 2 s6 $end
$var reg 1 3 s7 $end
$var reg 1 4 o1 $end
$var reg 1 5 o2 $end
$var reg 1 6 o3 $end
$scope module g1 $end
$upscope $end
$scope module g2 $end
$upscope $end
$scope module g3 $end
$upscope $end
$scope module g4 $end
$upscope $end
$scope module g5 $end
$upscope $end
$scope module g6 $end
$upscope $end
$scope module g7 $end
$upscope $end
$scope module g8 $end
$upscope $end
$scope module g9 $end
$upscope $end
$scope module g10 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
U$
U%
b000 &
0'
0(
0)
b000 *
U+
U,
U-
U.
U/
U0
U1
U2
U3
U4
U5
U6
#1000000
1!
1"
1'
1(
#2000000
